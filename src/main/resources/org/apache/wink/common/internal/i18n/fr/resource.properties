# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#  
#   http://www.apache.org/licenses/LICENSE-2.0
#  
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.  

# Class and Method Validation
classNotAProvider=The {0} class is not annotated with @javax.ws.rs.ext.Provider and is being returned by a javax.ws.rs.core.Application subclass. The runtime is ignoring this class.  Add a @javax.ws.rs.ext.Provider annotation to the class.
classNotAResourceNorProvider=The {0} class is neither a resource nor a provider. The runtime is ignoring this class. It was returned from a javax.ws.rs.core.Application subclass. Add either a @javax.ws.rs.Path or a @javax.ws.rs.core.Provider annotation to the class.
classNotADynamicResourceNorResourceNorProvider=The {0} class is not a dynamic resource, resource, or provider. The runtime is ignoring this class.  It was returned from a org.apache.wink.common.WinkApplication. Implement the org.apache.wink.common.DynamicResource interface to make it a dynamic resource, or add either a @javax.ws.rs.Path or a @javax.ws.rs.core.Provider annotation to the class to make it a resource or provider.
classAlreadyAdded=The class {0} was already added to the JAX-RS runtime. The runtime is ignoring this value.  Check that this class was not returned in the javax.ws.rs.core.Application subclass getSingletons() and getClasses() methods.
classNotValid=The class {0} can only have one of the following declarations\: {1} {2} {3} .  Ensure that the class has only one annotation. If the class has only one annotation, ensure that it does not also implement the {2} interface.
classIsUnknownProvider=The @javax.ws.rs.ext.Provider annotated class {0} does not implement a recognized Provider interface. The runtime is ignoring this class. Verify that the class implements javax.ws.rs.ext.ContextResolver, javax.ws.rs.ext.ExceptionMapper, javax.ws.rs.ext.MessageBodyReader, or javax.ws.rs.ext.MessageBodyWriter.
isNotAClassWithMsgFormat=The {0} is not a class or the class has unresolved dependencies.  The runtime is ignoring this value.
resourceClassNotValid=The resource class {0} is not a valid resource. The runtime environment is ignoring this value. Ensure that the resource class has a @javax.ws.rs.Path annotation and that the annotation has a unique value.
rootResourceInstanceIsAnInvalidResource=The root resource {0} instance is not a valid resource. Ensure that the resource instance has a @javax.ws.rs.Path annotation and that the annotation has a unique value.
classInstantiationExceptionWithMsgFormat=The runtime environment failed to instantiate the {0} class. Ensure that the class is not abstract, has a valid constructor, has the right visibility, and is not an inner member class.
classIllegalAccessWithMsgFormat=The runtime environment encountered an illegal access exception to {0}.  Ensure that the class is not abstract, has a valid constructor, has the right visibility, and is not an inner member class.
loadingClassToApplication=The class {0} was added to the JAX-RS application.
loadingApplication=The runtime is loading the JAX-RS application from {0}

exceptionOccurredDuringClassProcessing=An exception occurred during processing of the {0} class. This class is ignored.
listExceptionDuringClassProcessing=The following exception occurred during processing of class\: 
exceptionOccurredDuringSingletonProcessing=An exception occurred during processing of the {0} singleton. This singleton is ignored
exceptionOccurredDuringInstanceProcessing=An exception occurred during processing of the {0} instance. This instance is ignored.

methodNotAnnotatedCorrectly=The method {0} in the {1} class is not annotated with an HTTP method designator or the @javax.ws.rs.Path annotation. This method is ignored.  Annotate this method with a single @javax.ws.rs.GET, @javax.ws.rs.POST, @javax.ws.rs.PUT, @javax.ws.rs.DELETE or any other @javax.ws.rs.HttpMethod annnotation if this method should be a JAX-RS resource method.
subresourceLocatorIllegalEntityParameter=The {0} sub-resource locator contains an illegal entity parameter. The locator is ignored.  Remove the entity parameter from the sub-resource locator method definition.
subresourceLocatorAnnotatedConsumesProduces=The {0} sub-resource locator is annotated with @javax.ws.rs.Consumes/@javax.ws.rs.Produces. These annotations are ignored for sub-resource locators.

# Loading config
configNotFound=The system could not find the JAX-RS application config file {0}.  This value is ignored.
exceptionClosingFile=An exception occured when closing the file.
propertyNotDefined=The {0} property was not defined.
alternateShortcutMapLoadFailure=The system failed to load the alternateShortcutMap.
alternateShortcutMapCloseFailure=An exception occurred when closing the alternate shortcut file\:  

# Provider Information
uploadDirDoesNotExist=The upload directory {0} does not exist or is not a directory.  The entity is uploaded to a default temporary directory defined by the JVM system property "java.io.tmpdir".  Create the upload directory and verify that the file permissions are set appropriately.
cannotUseFileAsResponse=The system cannot read the {0} file to serve as a HTTP response. The file is not readable or is a directory. Verify that the file exists and the correct file permissions are set.

jaxbObjectFactoryInstantiate=The system failed to instantiate the object factory for the following class\: {0}.

# internals
mediaTypeSetAlreadyContains=The internal Providers MediaTypeSet already contains the {0} ObjectFactory.
invalidServletContextAccessor=The context access for the {0} attribute must be for either javax.servlet.http.HttpServletRequest or javax.servlet.http.HttpServletResponse.

# writing
noWriterOrDataSourceProvider=The system could not find a javax.ws.rs.ext.MessageBodyWriter or a DataSourceProvider class for the {0} type and {1} mediaType.  Ensure that a javax.ws.rs.ext.MessageBodyWriter exists in the JAX-RS application for the type and media type specified.
noWriterFound=The system could not find a javax.ws.rs.ext.MessageBodyWriter for the {0} type and {1} mediaType.

# Spring
springClassReplaceNewerObjectFactory=The {0} object factory was replaced with a newer object factory.
springBeanClassNotDynamicResource=The {0} bean of the {1} class is not a DynamicResource. Verify that the class implements the org.apache.wink.common.DynamicResource interface.
springBeanNotResourceNorProvider=The {0} bean of the {1} class is neither a resource nor a provider.  Add the appropriate JAX-RS annotation such as @javax.ws.rs.Path or @javax.ws.rs.ext.Provider to make the bean a resource or provider.
springExceptionOccurredDuringFieldInject=An exception occured during the fields injection for the following bean\: 

# Injection
injectionFailureSingleton=The system cannot inject the fields of the {0} singleton bean.

# Asset Provider
assetLocatorMethodMoreThanOneEntityParam=The {0} asset locator method has more than one entity parameter. You must use only one entity parameter.
assetMethodInvokeError=An error occurred when the system invoked the {0} asset method. 
assetMustHavePublicConstructor=The {0} asset cannot be instantiated.  Verify that your assets have a default public constructor defined.
assetCannotInstantiate=The {0} asset cannot be instantiated.  Verify that your assets have a default public constructor defined.

# JSON Provider
jsonFailWriteJSONObject=The system cannot write the JSONObject to the HTTP response. Verify that the JSONObject is valid.
jsonFailReadJSONObject=The system cannot read the JSONObject from the HTTP request. Verify that the incoming HTTP request contains valid JSON.
jsonFailWriteJSONArray=The system cannot write the JSONArray to the HTTP response. Verify that the JSONArray is valid.
jsonFailReadJSONArray=The system cannot read the JSONArray from the HTTP request. Verify that the incoming HTTP request contains valid JSON.

# JAXB Provider
jaxbObjectFactoryNotFound=The ObjectFactory class for the {0} class cannot be found or loaded.  Verify that a valid ObjectFactory class exists.
jaxbElementFailToBuild=A JAXBElement for {0} could not be created.  Verify that {0} is a valid JAXB class.
jaxbObjectFactoryNotAnnotatedXMLRegistry=The {0} ObjectFactory is not annotated with @javax.xml.bind.annotation.XmlRegistry.  Add the XmlRegistry annotation to the ObjectFactory.
jaxbFailToUnmarshal=The system cannot unmarshal the XML content into a {0} instance.  Verify that the XML content is valid.
jaxbFailToMarshal=The system cannot marshal the {0} JAXB object into XML content.  Verify that the JAXB object is valid.
jaxbCreateDefaultJAXBElement=The system created a default JAXBElement for the {0} instance.

# Failure Messages
mediaTypeWrongFormat=The {0} is not a valid MediaType format. You must use the following format\: type/subtype.
unhandledExceptionToContainer=An unhandled exception occurred which will be propagated to the container.
exceptionOccurredDuringInvocation=The following error occurred during the invocation of the handlers chain\: {0} with message ''{1}'' while processing {2} request sent to {3}

# Contexts
uriBadBaseURI=The following base URI syntax is not valid\: {0}
illegalAcceptHeader=Illegal Accept request header\: {0} 

conversionError=Error converting parameter {0} with value {1}

# Error Flow
exceptionOccurredDuringExceptionMapper=An exception occurred while processing the toResponse method of the {0} ExceptionMapper.

# WebDAV
webDAVNoEditOrSelfLink=The {0} resource did not set an edit or selflink.
webDAVFailSetupPropertyHelper=The system cannot setup a property helper.
webDAVFailCreateMarshaller=The system cannot created the WebDAV marshaller.
webDAVFailCreateUnmarshaller=The system cannot create the WebDAV unmarshaller.
webDAVUnableToParseElement=The system cannot parse the {0} the WebDAV element.
webDAVIncompatibleTypeInRequest=The {0} WebDAV element contains in incompatible type. The {1} type was received but the {2} type was requested.
webDAVUnableToMarshalElement=The system cannot marshal the {0} WebDAV element.

noMethodInClassSupportsHTTPMethod=The system cannot find any method in the {0} class that supports {1}. Verify that a method exists.
noMethodInClassConsumesHTTPMethod=The system cannot find any method in the {0} class that consumes {1} media type. Verify that a method exists that consumes the  media type specified.
noMethodInClassProducesHTTPMethod=The system cannot find any method in the {0} class that produces {1} media type responses. Verify that a method exists that produces the media type specified.

# Client Handler
clientIssueRequest=The client issued a request with {0}  HTTP method to the URI at {1} with the {2} entity class and {3} headers.
clientAcceptHeaderHandlerSetAccept=The accept header is automatically set to the following value\: {0}
clientResponseIsErrorCode=The client response returned the following error code\: {0}
clientConfigurationUnmodifiable=The client configuration cannot be modified because it is in use by a client.  A new client configuration must be constructed to modify the client configuration.
entityTypeMustBeParameterized=The EntityType class must be parameterized.  Add a generic parameter to the EntityType.
clientNoWriterForTypeAndMediaType=A javax.ws.rs.ext.MessageBodyWriter implementation was not found for the {0} type and {1} media type.  Verify that all entity providers are correctly registered.  Add a custom javax.ws.rs.ext.MessageBodyWriter provider to handle the type and media type if a JAX-RS entity provider does not currently exist.
clientCannotConvertEntity=An entity of {0} type cannot be cast as the following type\: {1}
clientNoReaderForTypeAndMediaType=A javax.ws.rs.ext.MessageBodyReader implementation was not found for {0} type and {1} media type.  Verify that all entity providers are correctly registered.  Add a custom javax.ws.rs.ext.MessageBodyReader provider to handle the type and media type if a JAX-RS entity provider does not currently exist.

# Server Handlers
checkLocationHeaderHandlerIllegalArg=The required Location header was not set for the following status code\: {0}
populateResponseMediaTypeHandlerFromCompatibleMessageBodyWriters=The Content-Type header was not specified on the javax.ws.rs.core.Response object or using a @javax.ws.rs.Produces annotation.  Therefore, the Content-Type was automatically set using the compatible javax.ws.rs.ext.MessageBodyWriter providers.
populateResponseMediaTypeHandlerNoAcceptableResponse=The client did not list any compatible media types in the Accept request header.  The service is automatically sending a HTTP 406 Not Acceptable response to the client.

# Servlet/Filter Messages
restServletJAXRSApplicationInitParam=The system is using the {0} JAX-RS application class that is named in the {1} init-param initialization parameter.
restServletWinkApplicationInitParam=The system is using the {0} JAX-RS application class named in the {1} init-param initialization parameter.
restServletUseDeploymentConfigurationParam=The system is using the {0} deployment configuration class named in the {1} init-param initialization parameter.
restServletUsePropertiesFileAtLocation=The system is using the properties file located at {0} named in the {1} init-param initialization parameter.
restServletRequestProcessorCouldNotBeCreated=The system cannot create the RequestProcessor. Verify that the JAX-RS application configuration is correct.
adminServletRequestProcessorInitBeforeAdmin=The request processor cannot be initialized. Verify that you initialization the request processor before calling the AdminServlet.
adminServletFailCreateJAXBForAdminServlet=The JAXBContext for the AdminServlet class cannot be created. Verify that the required libraries are available.
adminServletFailMarshalObject=The {0} object cannot be marshaled from JAXB into XML content. Verify that the required libraries are available.

# Server
cannotGetOutputStreamSinceWriterRequested=The system cannot obtain the java.io.OutputStream because a java.io.Writer was already requested. Verify that no java.io.Writer was requested before the java.io.OutputStream.
writerCannotGetWriterSinceOutputStreamRequested=The system cannot obtain the java.io.Writer since a java.io.OutputStream was already requested. Verify that no java.io.OutputStream was requested before the java.io.Writer.
rootResourceCollectionListIsNull=The CollectionList is null. Verify that the JAX-RS application was correctly configured.

parameterHttpsIsEmptyOrNotInitialized=The httpsURI parameter is empty or it is not initialized.
parameterHttpIsEmptyOrNotInitialized=The httpURI parameter is empty or it is not initialized.
uriInfoInvalidURI=A URI was specified with syntax that is not valid.  Verify that the URI is valid.
methodCallOutsideScopeOfRequestContext=A method call was made outside the scope of a request context.  Verify that the method is called within the context of a JAX-RS request.

# JCDI
#jcdiSingletonObjectFactoryCannotInstantiateInstance=Cannot create an instance of the JCDI managed bean class {0}.  Verify that the bean is a singleton or is annotated with @javax.enterprise.context.ApplicationScoped. 

# others
methodCannotHandleType=The system cannot determine the class of type {0}.
missingVariable=The {0} variable is missing. Verify that null is not being passed in.
valueAtIndexIsNull=The value argument at index {0} is null. Verify that the argument at the index specified is not null.
variableIsEmpty=The {0} variable is empty. Verify that the variable is not empty.
resourceNotAnnotated=The resource class {1} is not annotated with the {0} annotation.
methodNotAnnotated=The method {1} is not annotated with the {0} annotation.
moreThanOneMethodAnnotated=There is more than one method with name {1} in resource {2} with the {0} annotation. Verify that the annotation is used on only one of the methods. 
noMethodAnnotated=A method with name {1} in resource {2} with the {0} annotation does not exist.
invalidPort=The port value of {0} is not valid. Verify that the port specified was correct.
isInvalid=The {0} value of {1} is invalid.
segmentAtIndexIsNull=The segment at index {0} is null. Specify a non-null value at that index.
variableIsNull=The value of the {0} variable is null. Specify a non-null value.
variableNotSuppliedAValue=The {0} variable was not supplied a value. Provide a value for this variable.
patternNotCompiled=The pattern is not compiled. Compile the pattern with the compile method.
syntaxErrorInvalidTemplateForm=The {0} value contains a syntax error that results in an invalid template form. Verify that the value is a valid template.
valueFromMethodMustBeType=The value that is returned from the {0} method must be of the following type\: {1}
notASupportedResourceMethodParam=The {0} type is not a supported resource method parameter.
cannotConvertValueFromTo=The system cannot convert the {0} value to {1}.
cannotCreateFactoryForClass=A factory for the {0} class cannot be created. Ensure that it is a valid provider, resource, or JAX-RS application sub-class.
cannotCreateDefaultFactoryForDR=The default factory for the {0} DynamicResource cannot be created.
cannotCreateDefaultFactoryFor=The default factory for the {0} class cannot be created.
cookieCannotContainAddlVers=The cookie cannot contain an additional $Version value\: {0}
cookieMustStartWithVersion=The cookie must start with a $Version\: {0}
cookieDoesNotContainNAMEVALUE=The {0} cookie does not contain a NAME+VALUE.
failedToParseCookie=The {0} cookie cannot be parsed.
invalidCookie=The {0} cookie is not valid.
jaxrsCacheControlTypeSupport=The JAX-RS CacheControl type is designed to support only cache-response-directives
headerIsNull=The {0} header is null.
cookieIsNull=The cookie is null.
cookieNameNotValid=The {0} name of the cookie is not valid.
cookieNameValueNotValid=The {0} value for the cookie is not valid.
entityTagNotQuoted=The syntax of the {0} entity tag is not specified correctly.  The entity tag must be quoted.
cannotMixInlineAndOutOfLine=Do not mix attributes for both inline and out-of-line categories.
failedToCreateJAXBContextFor=The JAXBContext cannot be created for {0}.
contentMayHaveInlineOrOutContent=The content element might have either inline or out-of-line content.
typeAttribMustHaveValidMimeType=The type attribute of the content element must be a valid mime type when the content is out-of-line.
noValidConstructorFoundFor=A valid constructor could not be found for class {0}.  Verify that the class has a valid constructor and is not a Java inner class.
unsupportedOperator=The {0} is an unsupported operator.
errorSettingUpAtom=An error occurred setting up the Atom JAXB utilities\: {0}
errorOccurredProcessingRequest=An error occurred while processing a request.
conflictingParameterAnnotations=There are conflicting parameter annotations for {0}.  Two or more parameter annotations are used. Be sure only one annotation is used.
couldNotFindWriter=The system could not find a writer for {0} and {1}.  Locate a DataSourceProvider for the JavaBeans Activation Framework (JAF).
cannotCastTo=The system cannot cast {0} to {1}.
mediaTypeHeaderNull=The MediaType header is null.
multiPartStreamAlreadyClosed=The stream is already closed. The PartInputStream is not accessible after moving to the next part.
lastMatchWasUnsuccessful=The last match was unsuccessful.
variableContainsMoreThanOneValueForJoinOperator=The {0} variable contains more than one value for the join operator.
matchedSuffixMustEndWith=The matched suffix must end with ''{0}''.
matchedSuffixMustStartWith=The matched suffix must start with ''{0}''.
listOperatorMustHaveOnlyOneVariable=The list operator must only have one variable.
suffixOperatorMustOnlyHaveOneVariable=The suffix operator must have only one variable.
prefixOperatorMustHaveOnlyOneVariable=The prefix operator must have only one variable.
missingClientAuthenticationCredentialForUser=The client authentication is missing a credential for user\: {0}
missingClientAuthenticationCredentialForProxyUser=The client authentication is missing a credential for proxy user\: {0}
serviceFailedToAuthenticateUser=The service failed to authenticate user\: {0}
serviceFailedToAuthenticateProxyUser=The proxy failed to authenticate proxy user\: {0}
providerShouldBeAnnotatedDirectly=The @javax.ws.rs.ext.Provider annotation was found on the superclass or interface {1} of the {0} class.  Annotate @javax.ws.rs.ext.Provider on the provider class directly to ensure portability between environments.
rootResourceShouldBeAnnotatedDirectly=The @javax.ws.rs.Path annotation was found on the superclass or interface {1} of the {0} class.  Annotate @javax.ws.rs.Path on the root resource class directly to ensure portability between environments.
providerIsInterfaceOrAbstract=A @javax.ws.rs.ext.Provider annotation was found on {0} which is an interface or an abstract class and is being ignored. Annotate @javax.ws.rs.ext.Provider on the provider implementation or base class directly and return that in your javax.ws.rs.core.Application subclass.
entityRefsNotSupported=Entity references are not supported in XML documents due to possible security vulnerabilities.
entityRefsNotSupportedSunJDK5=Entity references are not supported in XML documents due to possible security vulnerabilities.  Sun JDK5 does not support the necessary feature to prevent a NullPointerException.  See http\://bugs.sun.com/bugdatabase/view_bug.do?bug_id\=6181020
saxParseException=The system cannot parse the XML content into a {0} instance.  Verify that the XML content is valid.
saxParserConfigurationException=The system cannot configure the SAX parser with the given configuration parameter.
badXMLReaderInitialStart=The XMLStreamReader instance has already been partially processed.
exceptionDuringInjection=Exception encountered during JCDI injection
#couldNotFindBeanManager=Could not find BeanManager.
processingRequestTo=Processing {0} request to {1}, source content type is {2}, acceptable media types include {3}
registeredResources=Registered JAX-RS resources\: {0}
followingProviders=The following JAX-RS providers are registered\: {0}
followingProvidersUserDefined=The following user-defined JAX-RS providers are registered\: {0}
applicationProcessed=The following JAX-RS application has been processed\: {0}
multipleHttpMethodAnnotations=Multiple javax.ws.rs.HttpMethod annotations on method {0} in class {1} were found. Use only a single annotation on the method.
resourceMethodMoreThanOneEntityParam=The {0} method has more than one entity parameter. You must use only one entity parameter.
serverRegisterJAXRSResourceWithPath=The server has registered the JAX-RS resource class {0} with @Path({1}).
noJAXRSApplicationDefinedProviders=There are no custom JAX-RS providers defined in the application.
registeredJAXRSProviderWithMediaTypeAndAllGenericType=The class {0} was registered as a JAX-RS {1} provider for all Java types and {2} media types.
registeredJAXRSProviderWithMediaType=The class {0} was registered as a JAX-RS {1} provider for {2} Java types and {3} media types.
registeredJAXRSProviderWithoutMediaType=The class {0} was registered as a JAX-RS {1} provider for {2} Java types.
registeredJAXRSProviderWithoutMediaTypeAndAllGenericType=The class {0} was registered as a JAX-RS {1} provider for all Java types.
